// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// enum UserRole {
//   ADMIN
//   USER
// }

model User {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  email     String     @unique
  name      String
  password  String
  image     String?
  public_id String?
  documents Document[]
  // role     UserRole @default(USER)
  Order     Order[]
}

// model Document {
//   id       String @id @default(auto()) @map("_id") @db.ObjectId
//   title    String
//   type     String
//   version  String
//   status   String
//   fileURL  String
//   author   User   @relation(fields: [authorId], references: [id])
//   authorId String @db.ObjectId

// }

model Document {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  fileName    String?
  type        String
  version     String
  status      String
  fileURL     String
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @db.ObjectId
  authorImage String
  authorName  String
  CreatedAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// type DocumentFile {
//   img       String
//   title     String
//   CreatedAt DateTime @default(now())
// }

// type Author {
//   img        String
//   authorName String
// }

model Product {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  productName    String
  totalStock     Int
  image          String?
  public_id      String?
  purchasedPrice Int
  price          Int
  category       String
  soldQuantity   Int     @default(0)
}

model Order {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  user            User      @relation(fields: [userId], references: [id])
  userId          String    @db.ObjectId
  customerName    String
  customerEmail   String
  customerPhone   String
  customerAddress String
  orders          Json?
  subTotal        Int
  totalQuantity   Int
  CreatedAt       DateTime? @default(now())
  updatedAt       DateTime? @updatedAt
}
